<!-- Converted by db4-upgrade version 1.0 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glGetPolygonStipple">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>1991-2006</year>
                <holder>Silicon Graphics, Inc.</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glGetPolygonStipple</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetPolygonStipple</refname>
        <refpurpose>return the polygon stipple pattern</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetPolygonStipple</function></funcdef>
                <paramdef>GLubyte * <parameter>pattern</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <!-- eqn: ignoring delim $$ -->
    <refsection xml:id="parameters"><info><title>Parameters</title></info>
        <variablelist>
        <varlistentry>
            <term><parameter>pattern</parameter></term>
            <listitem>
                <para>
                    Returns the stipple pattern. The initial value is all 1's.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsection>
    <refsection xml:id="description"><info><title>Description</title></info>
        <para>
            <function>glGetPolygonStipple</function> returns to <parameter>pattern</parameter> a 
            <inlineequation><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink">
                <!-- eqn: 32  times  32:-->
                <mml:mrow>
                    <mml:mn>32</mml:mn>
                    <mml:mo>&#x00D7;</mml:mo>
                    <mml:mn>32</mml:mn>
                </mml:mrow>
            </mml:math></inlineequation>
            polygon stipple pattern.
            The pattern is packed into memory as if <citerefentry><refentrytitle>glReadPixels</refentrytitle></citerefentry>
            with both <emphasis>height</emphasis> and <emphasis>width</emphasis> of 32,
            <emphasis>type</emphasis> of <constant>GL_BITMAP</constant>,
            and <emphasis>format</emphasis> of <constant>GL_COLOR_INDEX</constant> were called,
            and the stipple pattern were stored in an internal 
            <inlineequation><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink">
                <!-- eqn: 32  times  32:-->
                <mml:mrow>
                    <mml:mn>32</mml:mn>
                    <mml:mo>&#x00D7;</mml:mo>
                    <mml:mn>32</mml:mn>
                </mml:mrow>
            </mml:math></inlineequation>
            color
            index buffer.
            Unlike <citerefentry><refentrytitle>glReadPixels</refentrytitle></citerefentry>,
            however,
            pixel transfer operations
            (shift, offset, pixel map)
            are not applied to the returned stipple image.
        </para>
        <para>
            If a non-zero named buffer object is bound to the <constant>GL_PIXEL_PACK_BUFFER</constant> target 
            (see <citerefentry><refentrytitle>glBindBuffer</refentrytitle></citerefentry>) while a polygon stipple pattern is
            requested, <parameter>pattern</parameter> is treated as a byte offset into the buffer object's data store.
        </para>
    </refsection>
    <refsection xml:id="notes"><info><title>Notes</title></info>
        <para>
            If an error is generated,
            no change is made to the contents of <parameter>pattern</parameter>.
        </para>
    </refsection>
    <refsection xml:id="errors"><info><title>Errors</title></info>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if a non-zero buffer object name is bound to the
            <constant>GL_PIXEL_PACK_BUFFER</constant> target and the buffer object's data store is currently mapped.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if a non-zero buffer object name is bound to the
            <constant>GL_PIXEL_PACK_BUFFER</constant> target and the data would be packed to the buffer 
            object such that the memory writes required would exceed the data store size.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <function>glGetPolygonStipple</function>
            is executed between the execution of <citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>
            and the corresponding execution of <citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.
        </para>
    </refsection>
    <refsection xml:id="associatedgets"><info><title>Associated Gets</title></info>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_PIXEL_PACK_BUFFER_BINDING</constant>
        </para>
    </refsection>
    <refsection xml:id="seealso"><info><title>See Also</title></info>
        <para>
            <citerefentry><refentrytitle>glPixelStore</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glPixelTransfer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glPolygonStipple</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glReadPixels</refentrytitle></citerefentry>
        </para>
    </refsection>
    <refsection xml:id="Copyright"><info><title>Copyright</title></info>
        <para>
            Copyright <trademark class="copyright"/> 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://oss.sgi.com/projects/FreeB/">http://oss.sgi.com/projects/FreeB/</link>.
        </para>
    </refsection>
</refentry>