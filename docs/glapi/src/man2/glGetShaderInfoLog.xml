<!-- Converted by db4-upgrade version 1.0 -->
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glGetShaderInfoLog">
    <refmeta>
	<refentrytitle>glGetShaderInfoLog</refentrytitle>
	<manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
	<refname>glGetShaderInfoLog</refname>
	<refpurpose>Returns the information log for a shader object</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
	<funcsynopsis>
	    <funcprototype>
		<funcdef>void <function>glGetShaderInfoLog</function></funcdef>
		<paramdef>GLuint <parameter>shader</parameter></paramdef>
		<paramdef>GLsizei <parameter>maxLength</parameter></paramdef>
		<paramdef>GLsizei *<parameter>length</parameter></paramdef>
		<paramdef>GLchar *<parameter>infoLog</parameter></paramdef>
	    </funcprototype>
	</funcsynopsis>
    </refsynopsisdiv>
    <refsection xml:id="parameters"><info><title>Parameters</title></info>
	<variablelist>
	    <varlistentry>
		<term><parameter>shader</parameter></term>
		<listitem>
		    <para>Specifies the shader object whose information
		    log is to be queried.</para>
		</listitem>
	    </varlistentry>
	    <varlistentry>
		<term><parameter>maxLength</parameter></term>
		<listitem>
		    <para>Specifies the size of the character buffer for
		    storing the returned information log.</para>
		</listitem>
	    </varlistentry>
	    <varlistentry>
		<term><parameter>length</parameter></term>
		<listitem>
		    <para>Returns the length of the string returned in
		    <parameter>infoLog</parameter> (excluding the null
		    terminator).</para>
		</listitem>
	    </varlistentry>
	    <varlistentry>
		<term><parameter>infoLog</parameter></term>
		<listitem>
		    <para>Specifies an array of characters that is used
		    to return the information log.</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </refsection>
    <refsection xml:id="description"><info><title>Description</title></info>
	<para><function>glGetShaderInfoLog</function> returns the
	information log for the specified shader object. The information
	log for a shader object is modified when the shader is compiled.
	The string that is returned will be null terminated.</para>

	<para><function>glGetShaderInfoLog</function> returns in
	<parameter>infoLog</parameter> as much of the information log as
	it can, up to a maximum of <parameter>maxLength</parameter>
	characters. The number of characters actually returned,
	excluding the null termination character, is specified by
	<parameter>length</parameter>. If the length of the returned
	string is not required, a value of <constant>NULL</constant> can
	be passed in the <parameter>length</parameter> argument. The
	size of the buffer required to store the returned information
	log can be obtained by calling
	<citerefentry><refentrytitle>glGetShader</refentrytitle></citerefentry>
	with the value <constant>GL_INFO_LOG_LENGTH</constant>.</para>

	<para>The information log for a shader object is a string that
	may contain diagnostic messages, warning messages, and other
	information about the last compile operation. When a shader
	object is created, its information log will be a string of
	length 0.</para>
    </refsection>
    <refsection xml:id="notes"><info><title>Notes</title></info>
	<para><function>glGetShaderInfoLog</function> is available only
	if the GL version is 2.0 or greater.</para>

	<para>The information log for a shader object is the OpenGL
	implementer's primary mechanism for conveying information about
	the compilation process. Therefore, the information log can be
	helpful to application developers during the development
	process, even when compilation is successful. Application
	developers should not expect different OpenGL implementations to
	produce identical information logs.</para>
    </refsection>
    <refsection xml:id="errors"><info><title>Errors</title></info>
	<para><constant>GL_INVALID_VALUE</constant> is generated if
	<parameter>shader</parameter> is not a value generated by
	OpenGL.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<parameter>shader</parameter> is not a shader object.</para>

	<para><constant>GL_INVALID_VALUE</constant> is generated if
	<parameter>maxLength</parameter> is less than 0.</para>

	<para><constant>GL_INVALID_OPERATION</constant> is generated if
	<function>glGetShaderInfoLog</function> is executed between the
	execution of
	<citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry>
	and the corresponding execution of
	<citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.</para>
    </refsection>
    <refsection xml:id="associatedgets"><info><title>Associated Gets</title></info>
	<para><citerefentry><refentrytitle>glGetShader</refentrytitle></citerefentry>
	with argument <constant>GL_INFO_LOG_LENGTH</constant></para>

	<para><citerefentry><refentrytitle>glIsShader</refentrytitle></citerefentry></para>
    </refsection>
    <refsection xml:id="seealso"><info><title>See Also</title></info>
	<para><citerefentry><refentrytitle>glCompileShader</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glGetProgramInfoLog</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glLinkProgram</refentrytitle></citerefentry>,
	<citerefentry><refentrytitle>glValidateProgram</refentrytitle></citerefentry></para>
    </refsection>
    <refsection xml:id="Copyright"><info><title>Copyright</title></info>
        <para>
            Copyright <trademark class="copyright"/> 2003-2005 3Dlabs Inc. Ltd. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://opencontent.org/openpub/">http://opencontent.org/openpub/</link>.
        </para>
    </refsection>
</refentry>