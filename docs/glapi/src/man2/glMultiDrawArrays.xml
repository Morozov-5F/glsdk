<?xml version="1.0" encoding="utf-8"?><!-- Converted by db4-upgrade version 1.0 --><refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glMultiDrawArrays"><db:info xmlns:db="http://docbook.org/ns/docbook"><copyright>
                <year>1991-2006</year>
                <holder>Silicon Graphics, Inc.</holder>
            </copyright></db:info>
    <refmeta>
        
        <refentrytitle>glMultiDrawArrays</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glMultiDrawArrays</refname>
        <refpurpose>render multiple sets of primitives from array data</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glMultiDrawArrays</function></funcdef>
                <paramdef>GLenum <parameter>mode</parameter></paramdef>
                <paramdef>GLint * <parameter>first</parameter></paramdef>
                <paramdef>GLsizei * <parameter>count</parameter></paramdef>
                <paramdef>GLsizei <parameter>primcount</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <!-- eqn: ignoring delim $$ -->
    <refsection><info><title>Parameters</title></info>
        <variablelist>
        <varlistentry>
            <term><parameter>mode</parameter></term>
            <listitem>
                <para>
                    Specifies what kind of primitives to render.
                    Symbolic constants
                    <constant>GL_POINTS</constant>,
                    <constant>GL_LINE_STRIP</constant>,
                    <constant>GL_LINE_LOOP</constant>,
                    <constant>GL_LINES</constant>,
                    <constant>GL_TRIANGLE_STRIP</constant>,
                    <constant>GL_TRIANGLE_FAN</constant>,
                    <constant>GL_TRIANGLES</constant>,
                    <constant>GL_QUAD_STRIP</constant>,
                    <constant>GL_QUADS</constant>,
                    and <constant>GL_POLYGON</constant> are accepted.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>first</parameter></term>
            <listitem>
                <para>
                    Points to an array of starting indices in the enabled arrays.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>count</parameter></term>
            <listitem>
                <para>
                    Points to an array of the number of indices to be rendered.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>primcount</parameter></term>
            <listitem>
                <para>
                    Specifies the size of the first and count
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsection>
    <refsection><info><title>Description</title></info>
        <para>
            <function>glMultiDrawArrays</function> specifies multiple sets of geometric primitives
            with very few subroutine calls. Instead of calling a GL procedure
            to pass each individual vertex, normal, texture coordinate, edge
            flag, or color, you can prespecify
            separate arrays of vertices, normals, and colors and use them to
            construct a sequence of primitives with a single
            call to <function>glMultiDrawArrays</function>.
        </para>
        <para>
            <function>glMultiDrawArrays</function> behaves identically to <citerefentry><refentrytitle>glDrawArrays</refentrytitle></citerefentry> except that <parameter>primcount</parameter>
            separate ranges of elements are specified instead.
        </para>
        <para>
            When <function>glMultiDrawArrays</function> is called, it uses <parameter>count</parameter> sequential elements from each
            enabled array to construct a sequence of geometric primitives,
            beginning with element <parameter>first</parameter>. <parameter>mode</parameter> specifies what kind of
            primitives are constructed, and how the array elements
            construct those primitives. If <constant>GL_VERTEX_ARRAY</constant> is not enabled, no
            geometric primitives are generated.
        </para>
        <para>
            Vertex attributes that are modified by <function>glMultiDrawArrays</function> have an
            unspecified value after <function>glMultiDrawArrays</function> returns. For example, if
            <constant>GL_COLOR_ARRAY</constant> is enabled, the value of the current color is
            undefined after <function>glMultiDrawArrays</function> executes. Attributes that aren't
            modified remain well defined.
        </para>
    </refsection>
    <refsection><info><title>Notes</title></info>
        <para>
            <function>glMultiDrawArrays</function> is available only if the GL version is 1.4 or greater.
        </para>
        <para>
            <function>glMultiDrawArrays</function> is included in display lists. If <function>glMultiDrawArrays</function> is entered into a
            display list,
            the necessary array data (determined by the array pointers and
            enables) is also
            entered into the display list. Because the array pointers and
            enables are client-side state, their values affect display lists
            when the lists are created, not when the lists are executed.
        </para>
    </refsection>
    <refsection><info><title>Errors</title></info>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>mode</parameter> is not an accepted value.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>primcount</parameter> is negative.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if a non-zero buffer object name is bound to an
            enabled array and the buffer object's data store is currently mapped.
        </para>
        <para>
            <constant>GL_INVALID_OPERATION</constant> is generated if <function>glMultiDrawArrays</function> is executed between
            the execution of <citerefentry><refentrytitle>glBegin</refentrytitle></citerefentry> and the corresponding <citerefentry><refentrytitle>glEnd</refentrytitle></citerefentry>.
        </para>
    </refsection>
    <refsection><info><title>See Also</title></info>
        <para>
            <citerefentry><refentrytitle>glArrayElement</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glColorPointer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDrawElements</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glDrawRangeElements</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glEdgeFlagPointer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glFogCoordPointer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glGetPointerv</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glIndexPointer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glInterleavedArrays</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glNormalPointer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glSecondaryColorPointer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glTexCoordPointer</refentrytitle></citerefentry>,
            <citerefentry><refentrytitle>glVertexPointer</refentrytitle></citerefentry>
        </para>
    </refsection>
    <refsection><info><title>Copyright</title></info>
        <para>
            Copyright <trademark class="copyright"/> 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://oss.sgi.com/projects/FreeB/">http://oss.sgi.com/projects/FreeB/</link>.
        </para>
    </refsection>
</refentry>