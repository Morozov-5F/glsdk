<?xml version="1.0" encoding="utf-8"?><!-- Converted by db4-upgrade version 1.0 --><refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glSampleCoverage"><db:info xmlns:db="http://docbook.org/ns/docbook"><copyright>
                <year>1991-2006</year>
                <holder>Silicon Graphics, Inc.</holder>
            </copyright></db:info>
    <refmeta>
        
        <refentrytitle>glSampleCoverage</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glSampleCoverage</refname>
        <refpurpose>specify multisample coverage parameters</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glSampleCoverage</function></funcdef>
                <paramdef>GLclampf <parameter>value</parameter></paramdef>
                <paramdef>GLboolean <parameter>invert</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <!-- eqn: ignoring delim $$ -->
    <refsection><info><title>Parameters</title></info>
        <variablelist>
        <varlistentry>
            <term><parameter>value</parameter></term>
            <listitem>
                <para>
                    Specify a single floating-point sample coverage value.  The value is
                    clamped to the range 
                    <inlineequation><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink">
                        <!-- eqn: [0 ,1]: -->
                        <mml:mfenced open="[" close="]">
                            <mml:mn>0</mml:mn>
                            <mml:mn>1</mml:mn>
                        </mml:mfenced>
                    </mml:math></inlineequation>.
                    The initial value is 1.0.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>invert</parameter></term>
            <listitem>
                <para>
                    Specify a single boolean value representing if the coverage masks should be
                    inverted.  <constant>GL_TRUE</constant> and <constant>GL_FALSE</constant> are accepted.  The initial value
                    is <constant>GL_FALSE</constant>.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsection>
    <refsection><info><title>Description</title></info>
        <para>
            Multisampling samples a pixel multiple times at various
            implementation-dependent subpixel locations to generate antialiasing
            effects.  Multisampling transparently antialiases points, lines, polygons,
            and images if it is enabled.
        </para>
        <para>
            <parameter>value</parameter> is used in constructing a temporary mask used in determining which
            samples will be used in resolving the final fragment color.  This mask is
            bitwise-anded with the coverage mask generated from the multisampling
            computation.  If the <parameter>invert</parameter> flag is set, the temporary mask is inverted
            (all bits flipped) and then the bitwise-and is computed.
        </para>
        <para>
            If an implementation does not have any multisample buffers available, or
            multisampling is disabled, rasterization occurs with only a single sample
            computing a pixel's final RGB color.
        </para>
        <para>
            Provided an implementation supports multisample buffers, and multisampling
            is enabled, then a pixel's final color is generated by combining several
            samples per pixel.  Each sample contains color, depth, and stencil
            information, allowing those operations to be performed on each sample.
        </para>
    </refsection>
    <refsection><info><title>Associated Gets</title></info>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_SAMPLE_COVERAGE_VALUE</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glGet</refentrytitle></citerefentry> with argument <constant>GL_SAMPLE_COVERAGE_INVERT</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_MULTISAMPLE</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_SAMPLE_ALPHA_TO_COVERAGE</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_SAMPLE_ALPHA_TO_ONE</constant>
        </para>
        <para>
            <citerefentry><refentrytitle>glIsEnabled</refentrytitle></citerefentry> with argument <constant>GL_SAMPLE_COVERAGE</constant>
        </para>
    </refsection>
    <refsection><info><title>See Also</title></info>
        <para>
            <citerefentry><refentrytitle>glEnable</refentrytitle></citerefentry>
        </para>
    </refsection>
    <refsection><info><title>Copyright</title></info>
        <para>
            Copyright <trademark class="copyright"/> 1991-2006
            Silicon Graphics, Inc. This document is licensed under the SGI
            Free Software B License. For details, see
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://oss.sgi.com/projects/FreeB/">http://oss.sgi.com/projects/FreeB/</link>.
        </para>
    </refsection>
</refentry>